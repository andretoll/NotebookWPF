<Controls:MetroWindow
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
    x:Class="NotebookWPF.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    Dialog:DialogParticipation.Register="{Binding}"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:NotebookWPF"
    xmlns:uc="clr-namespace:NotebookWPF.View.UserControls"
    mc:Ignorable="d"
    ShowIconOnTitleBar="True"
    Icon="/Resources/notebook.ico"
    TitleCaps="False"
    WindowTitleBrush="{StaticResource DarkGrayColorBrush}"
    MinHeight="450"
    MinWidth="800"
    BorderThickness="0"
    GlowBrush="Black"
    Title="Simple Notes" Height="600" Width="1200">
    
    <!--- Window Local Resources -->
    <Window.Resources>
        <Style x:Key="CustomMetroListBoxItem"
               BasedOn="{StaticResource MetroListBoxItem}"
               TargetType="{x:Type ListBoxItem}">
            <Setter Property="BorderThickness" Value="5 0 0 0"/>
            <Setter Property="Background" Value="{Binding DarkGrayColorBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Background" Value="{StaticResource LightGrayColorBrush}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource AccentBaseColorBrush}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource LightGrayColorBrush}" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsEnabled" Value="False" />
                        <Condition Property="IsSelected" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource LightGrayColorBrush}" />
                    <Setter Property="Foreground" Value="White" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource LightGrayColorBrush}" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource LightGrayColorBrush}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource AccentBaseColorBrush}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <!--- Icon Template -->
    <Controls:MetroWindow.IconTemplate>
        <DataTemplate>
            <Grid Width="{TemplateBinding Width}"
                  Height="{TemplateBinding Height}"
                  Margin="4"
                  Background="Transparent"
                  RenderOptions.EdgeMode="Aliased"
                  RenderOptions.BitmapScalingMode="HighQuality">
                <Image Source="/Resources/notebook.ico"/>
            </Grid>
        </DataTemplate>
    </Controls:MetroWindow.IconTemplate>

    <!--- Title bar controls -->
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>

            <!-- Open Settings -->
            <Button x:Name="SettingsButton"
                    Click="SettingsButton_Click"
                    ToolTip="Settings">
                <StackPanel Orientation="Horizontal">
                    <!--- Draw Icon -->
                    <Rectangle Width="20"
                               Height="20"
                               Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" 
                                         Visual="{StaticResource appbar_settings}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <!--- Button text -->
                    <TextBlock Margin="4 0 0 0"
                               VerticalAlignment="Center"
                               Text="Settings"/>
                </StackPanel>
            </Button>

        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <!--- Settings Flyout -->
    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout Header="Settings"
                             x:Name="SettingsFlyout"
                             Position="Left" 
                             Width="400">

                <!-- Flyout Content -->
                <uc:SettingsUserControl/>

            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>

    <DockPanel>

        <!--- Bottom Panel -->
        <StackPanel DockPanel.Dock="Bottom"
                    Orientation="Horizontal"
                    Background="{StaticResource DarkGrayColorBrush}"
                    Height="40">

            <TextBlock Text="Edit mode activated."
                       Style="{StaticResource LargeText}"
                       Foreground="White"
                       Name="Txt"
                       VerticalAlignment="Center"
                       Margin="15 0 0 0">
                <TextBlock.Visibility>
                    <MultiBinding Converter="{StaticResource booleanToVisibilityMultiConverter}">
                        <Binding Path="NotebookIsEditing" />
                        <Binding Path="NoteIsEditing" />
                    </MultiBinding>
                </TextBlock.Visibility>
            </TextBlock>

        </StackPanel>

        <!--- Left Panel -->
        <DockPanel DockPanel.Dock="Left" 
                   Background="{DynamicResource AccentBaseColorBrush}"
                   Panel.ZIndex="2" 
                   Name="pnlLeftMenu">

            <!--- Notebooks -->
            <DockPanel x:Name="NotebooksPanel">
                <!--- Header -->
                <StackPanel Orientation="Vertical"
                            DockPanel.Dock="Top"
                            Margin="15">
                    <TextBlock Style="{StaticResource HugeText}"
                               Foreground="White"
                               Margin="0 0 0 15"
                               Text="Notebooks"/>
                    <!--- Buttons -->
                    <StackPanel Orientation="Horizontal"
                                Height="50">

                        <!--- Button to add new Notebook -->
                        <Button ToolTip="New notebook"
                                Command="{Binding NewNotebookCommand}"
                                Margin="0 0 20 0"
                                Style="{StaticResource LargeButton}">
                            <StackPanel Orientation="Horizontal">
                                <!--- Draw Icon -->
                                <Rectangle Width="20"
                                           Height="20"
                                           Fill="{Binding 
                                            RelativeSource={RelativeSource 
                                            AncestorType=Button}, 
                                            Path=Foreground}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill"
                                                     Visual="{StaticResource appbar_book}"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <!--- Button text -->
                                <TextBlock Margin="4 0 0 0"
                                           VerticalAlignment="Center"
                                           Text="NEW NOTEBOOK"/>
                            </StackPanel>
                        </Button>

                        <!--- Button to toggle edit mode -->
                        <ToggleButton ToolTip="Edit Notebooks"
                                      Width="40"
                                      Height="40"
                                      IsChecked="{Binding NotebookIsEditing}"
                                      Style="{DynamicResource CircleToggleButtonWhite}">
                            <Rectangle Width="15"
                                       Height="15"
                                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{DynamicResource appbar_edit}"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </ToggleButton>

                    </StackPanel>

                </StackPanel>

                <!--- List of Notebooks -->
                <ListBox ItemsSource="{Binding Notebooks, Mode=TwoWay}"
                         Name="NotebooksListBox"
                         SelectionChanged="NotebooksListBox_SelectionChanged"
                         SelectedItem="{Binding 
                                    SelectedNotebook, 
                                    Mode=TwoWay, 
                                    UpdateSourceTrigger=PropertyChanged}"
                         Margin="15 0 0 15"
                         Background="{DynamicResource DarkGrayColorBrush}"
                         BorderThickness="0"
                         VerticalContentAlignment="Top"
                         ScrollViewer.VerticalScrollBarVisibility="Auto"
                         ScrollViewer.CanContentScroll="False" 
                         ItemContainerStyle="{StaticResource CustomMetroListBoxItem}">
                    
                    <ListBox.Style>
                        <Style TargetType="ListBox">
                            <Setter Property="BorderThickness" Value="0, 0, 1, 0"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Notebooks.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.Style>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <!--- Notebook Data Template -->
                            <uc:NotebooksUserControl DataContext="{Binding}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <!--- If no notebooks exists -->
                <StackPanel HorizontalAlignment="Center"
                            VerticalAlignment="Top"
                            Opacity="0.7">
                    <TextBlock Text="No Notebooks."
                               Margin="0 20 0 0">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource HugeText}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Notebooks.Count}" Value="0">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </DockPanel>

            <!--- Notes -->
            <DockPanel Width="250"
                       DockPanel.Dock="Left"
                       Name="NotesPanel"
                       Visibility="{Binding 
                        SelectedNotebook, 
                        Converter={StaticResource nullToVisibilityConverter}}">

                <!--- Header -->
                <StackPanel Orientation="Vertical"
                            DockPanel.Dock="Top"
                            Margin="15">
                    <DockPanel>
                        <Button ToolTip="Back to Notebooks"
                                Click="BackToNotebooksButton_Click"
                                DockPanel.Dock="Right"
                                Width="40"
                                Height="40"
                                Style="{DynamicResource CircleButtonWhite}">
                            <Rectangle Width="15"
                                       Height="15"
                                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill"
                                                 Visual="{DynamicResource appbar_arrow_left}"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <StackPanel>
                            <TextBlock Style="{StaticResource HugeText}"
                                       Foreground="White"
                                       TextTrimming="WordEllipsis"
                                       DockPanel.Dock="Left"
                                       Text="{Binding SelectedNotebook.Name}"
/>
                        </StackPanel>

                    </DockPanel>


                    <!--- Buttons -->
                    <StackPanel Orientation="Horizontal"
                                Height="50">

                        <!--- Button to add new Note -->
                        <Button ToolTip="New note"
                                Command="{Binding NewNoteCommand}"
                                Margin="0 0 20 0"
                                Style="{StaticResource LargeButton}">
                            <StackPanel Orientation="Horizontal">
                                <!--- Draw Icon -->
                                <Rectangle Width="20"
                                           Height="20"
                                           Fill="{Binding 
                                            RelativeSource={RelativeSource 
                                            AncestorType=Button}, 
                                            Path=Foreground}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill"
                                                     Visual="{StaticResource appbar_paper}"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <!--- Button text -->
                                <TextBlock Margin="4 0 0 0"
                                           VerticalAlignment="Center"
                                           Text="NEW NOTE"/>
                            </StackPanel>
                        </Button>

                        <!--- Button to toggle edit mode -->
                        <ToggleButton ToolTip="Edit Notes"
                                      Width="40"
                                      Height="40"
                                      IsChecked="{Binding NoteIsEditing}"
                                      Style="{DynamicResource CircleToggleButtonWhite}">
                            <Rectangle Width="15"
                                       Height="15"
                                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill"
                                                 Visual="{DynamicResource appbar_edit}"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </ToggleButton>

                    </StackPanel>

                </StackPanel>

                <!--- List of Notes -->
                <ListBox ItemsSource="{Binding Notes, Mode=TwoWay}"
                         Name="NotesListBox"
                         SelectionChanged="NotesListBox_SelectionChanged"
                         SelectedItem="{Binding 
                                        SelectedNote, 
                                        Mode=TwoWay, 
                                        UpdateSourceTrigger=PropertyChanged}"
                         Margin="15 0 0 15"
                         BorderThickness="0"
                         Background="{DynamicResource DarkGrayColorBrush}"
                         VerticalContentAlignment="Top"
                         ScrollViewer.VerticalScrollBarVisibility="Auto"
                         ScrollViewer.CanContentScroll="False"
                         ItemContainerStyle="{StaticResource CustomMetroListBoxItem}">
                    <ListBox.Style>
                        <Style TargetType="ListBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Notes.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.Style>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <!--- Note Data Template -->
                            <uc:NotesUserControl DataContext="{Binding}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <!--- If no notes exists -->
                <StackPanel HorizontalAlignment="Center"
                            Opacity="0.7"
                            VerticalAlignment="Top">
                    <TextBlock Text="No Notes."
                               Margin="0 20 0 0">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource HugeText}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Notes.Count}" Value="0">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </DockPanel>

        </DockPanel>

        <StackPanel Orientation="Horizontal"
                    Background="{DynamicResource AccentColorBrush}">                     

            <ToggleButton Name="btnLeftMenuShowHide"
                          ToolTip="Show/Hide menu"
                          VerticalAlignment="Center"
                          Checked="btnLeftMenuShowHide_Checked"
                          Unchecked="btnLeftMenuShowHide_Checked"
                          Margin="5 0" 
                          Width="40"
                          Height="40"
                          Style="{DynamicResource CircleToggleButtonWhite}">
                <Rectangle Width="15"
                           Height="15"
                           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                                     Visual="{DynamicResource appbar_lines_horizontal_4}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </ToggleButton>
        </StackPanel>

        

        <!--- Separator -->
        <!--<StackPanel Margin="0"
                    Orientation="Horizontal">
            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" 
                       Opacity="0.3"/>
        </StackPanel>-->

        <!--- Text Editor -->
        <StackPanel>

        </StackPanel>

    </DockPanel>

</Controls:MetroWindow>
